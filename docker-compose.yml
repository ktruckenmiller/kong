version: '3.7'

volumes:
  kong_data: {}

networks:
  kong-net:
    external: false

services:
  kong:
    image: kong:2.8.1-alpine
    user: "${KONG_USER:-kong}"
    depends_on:
      - kong-database
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: '0.0.0.0:8001, 0.0.0.0:8444 ssl'
      KONG_CASSANDRA_CONTACT_POINTS: db
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: kong-database
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PG_PASSWORD: kongpass
      KONG_ADMIN_USERNAME: admin
      KONG_ADMIN_PASSWORD: admin

    networks:
      - kong-net
    ports:
      - "8000:8000/tcp"
      - "127.0.0.1:8001:8001/tcp"
      - "8443:8443/tcp"
      - "127.0.0.1:8444:8444/tcp"
      - "8003:8003/tcp"
    healthcheck:
      test: [ "CMD", "kong", "health" ]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure

  kong-database:
    image: postgres:9.6
    ports:
      - "5432:5432"
    networks:
      - kong-net
    environment:
      POSTGRES_DB: ${POSTGRES_USER:-kong}
      POSTGRES_USER: ${POSTGRES_DB:-kong}
      POSTGRES_PASSWORD: kongpass

secrets:
  kong_postgres_password:
    file: ./POSTGRES_PASSWORD
